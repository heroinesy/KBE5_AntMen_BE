# .github/workflows/build-check.yml

name: Build Check

on:
  pull_request:
    branches: ["**"]

# 권한 설정 추가
permissions:
  contents: read
  pull-requests: write # PR 코멘트 작성 권한
  issues: write # 이슈 작성 권한

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"
          JAVA_OPTS: "-Xmx2048m"

      # Docker 멀티 아키텍처 빌드 추가
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push multi-architecture Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: m-common  # 리포지토리명 수정 필요
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            .

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: build/reports/
          if-no-files-found: error

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const branch = context.payload.pull_request.head.ref;
            const commit = context.sha;
            const commitUrl = `https://github.com/${owner}/${repo}/commit/${commit}`;

            let message = `❌ 빌드 실패 알림\n\n`;
            message += `브랜치: ${branch}\n`;
            message += `커밋: ${commitUrl}\n`;
            message += `작업자: ${context.actor}\n\n`;
            message += `멀티 아키텍처 빌드가 실패했습니다. 자세한 내용은 GitHub Actions 로그를 확인해주세요.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: owner,
              repo: repo,
              body: message
            });

      - name: Notify on success
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const branch = context.payload.pull_request.head.ref;
            const commit = context.sha;
            const commitUrl = `https://github.com/${owner}/${repo}/commit/${commit}`;

            let message = `✅ 빌드 성공 알림\n\n`;
            message += `브랜치: ${branch}\n`;
            message += `커밋: ${commitUrl}\n`;
            message += `작업자: ${context.actor}\n\n`;
            message += `멀티 아키텍처 빌드가 성공적으로 완료되었습니다. (linux/amd64, linux/arm64)`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: owner,
              repo: repo,
              body: message
            });