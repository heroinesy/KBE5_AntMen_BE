dependencies {
	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// s3
	implementation 'software.amazon.awssdk:s3:2.31.54'
	implementation 'software.amazon.awssdk:auth:2.31.54'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile


sourceSets {
	main {
		java {
			srcDir querydslDir
		}
	}
}

// Gradle 7.x 이상에서 annotationProcessor 설정
tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

// QueryDSL 5.x부터는 명시적으로 jakarta-specific classifier를 사용해야 합니다.
// 그렇지 않으면 javax 버전의 QueryDSL APT를 가져올 수 있습니다.
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
    archiveFileName = 'm-common.jar'
}

jar {
    from {
        sourceSets.main.resources.srcDirs
    }
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
