spring:
  datasource:
    url: ${SPRING_DATABASE_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      # 동시에 허용할 수 있는 최대 커넥션 수
      # 예: 동시 20개 DB 연결까지만 처리 가능
      # 너무 작으면 트래픽 많을 때 대기 발생, 너무 크면 DB max_connections 초과 위험
      maximum-pool-size: 20

      # 커넥션이 유휴 상태(Sleep)로 몇 ms 이상 유지되면 풀에서 제거
      # 너무 짧으면 커넥션을 자주 만들고 없애는 오버헤드 발생
      # 너무 길면 유휴 커넥션이 쌓여 자원 낭비
      idle-timeout: 30000  # 30초

      # 하나의 커넥션이 유지될 수 있는 최대 시간
      # 오래된 커넥션을 주기적으로 교체해서 안정성 확보 (예: RDS가 강제 종료하는 문제 예방)
      max-lifetime: 600000  # 10분

      # 커넥션 풀에서 커넥션을 가져올 때까지 기다릴 최대 시간
      # 이 시간 안에 커넥션을 못 얻으면 예외 발생 (DB 과부하 판단 기준이 됨)
      connection-timeout: 30000  # 30초

      # 커넥션을 얻은 후 반환하지 않고 20초 이상 사용 중이면 누수 가능성 로그 출력
      # 커넥션을 닫지 않은 채 방치된 코드(누수)를 추적할 때 매우 유용
      leak-detection-threshold: 20000  # 20초
  jpa:
    hibernate:
      ddl-auto: update # ?? ??? update, ??????? validate ?? none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000

oauth:
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_REDIRECT_URI}

aws:
  s3:
    bucket-name: ${S3_BUCKET_NAME}
    region: ${S3_REGION}
    access-key: ${S3_ACCESS_KEY}
    secret-key: ${S3_SECRET_KEY}

springdoc:
  swagger-ui:
    path: /api/v1/docs

test:
  value: 123
